{"ast":null,"code":"var _jsxFileName = \"/Users/maltehubel/Documents/Studium/HdM/Semester 1/Cloud Computing/Cloud Kitchen /neuer_versuch/kitchen_neu/src/components/K\\xFCche.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kitchen() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const fetchOrders = () => {\n    fetch('http://localhost:8080/orders').then(response => response.json()).then(data => {\n      console.log('Abruf der Bestellungen:', data); // Überprüfen Sie, ob Daten korrekt abgerufen werden\n      setOrders(data);\n    }).catch(error => {\n      console.error('Fehler beim Abrufen der Bestellungen:', error);\n    });\n  };\n  const markOrderAsCompleted = orderId => {\n    fetch(`http://localhost:8080/order/${orderId}/complete`, {\n      method: 'PATCH'\n    }).then(response => {\n      if (response.ok) {\n        // Aktualisieren Sie den State sofort, um die Bestellung zu entfernen\n        setOrders(prevOrders => prevOrders.filter(order => order._id !== orderId));\n      } else {\n        console.error('Fehler beim Markieren der Bestellung als erledigt');\n      }\n    }).catch(error => {\n      console.error('Fehler beim Senden der Anfrage:', error);\n    });\n  };\n  useEffect(() => {\n    // Initial die Bestellungen abrufen\n    fetchOrders();\n\n    // Intervall einrichten, um die Bestellungen regelmäßig abzurufen\n    const fetchOrdersInterval = setInterval(fetchOrders, 5000);\n\n    // Aufräumen, wenn die Komponente unmontiert wird\n    return () => clearInterval(fetchOrdersInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"K\\xFCche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [console.log('order:', order), \" \", order.details.items && order.details.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.amount, \"x \", item.name]\n        }, itemIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markOrderAsCompleted(order._id),\n          children: \"Erledigt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Kitchen, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = Kitchen;\nexport default Kitchen;\nvar _c;\n$RefreshReg$(_c, \"Kitchen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Kitchen","_s","orders","setOrders","fetchOrders","fetch","then","response","json","data","console","log","catch","error","markOrderAsCompleted","orderId","method","ok","prevOrders","filter","order","_id","fetchOrdersInterval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","details","items","item","itemIndex","amount","name","onClick","_c","$RefreshReg$"],"sources":["/Users/maltehubel/Documents/Studium/HdM/Semester 1/Cloud Computing/Cloud Kitchen /neuer_versuch/kitchen_neu/src/components/Küche.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Kitchen() {\n  const [orders, setOrders] = useState([]);\n\n  const fetchOrders = () => {\n    fetch('http://localhost:8080/orders')\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Abruf der Bestellungen:', data); // Überprüfen Sie, ob Daten korrekt abgerufen werden\n        setOrders(data);\n      })\n      .catch((error) => {\n        console.error('Fehler beim Abrufen der Bestellungen:', error);\n      });\n  };\n\n  const markOrderAsCompleted = (orderId) => {\n    fetch(`http://localhost:8080/order/${orderId}/complete`, { method: 'PATCH' })\n      .then((response) => {\n        if (response.ok) {\n          // Aktualisieren Sie den State sofort, um die Bestellung zu entfernen\n          setOrders((prevOrders) => prevOrders.filter((order) => order._id !== orderId));\n        } else {\n          console.error('Fehler beim Markieren der Bestellung als erledigt');\n        }\n      })\n      .catch((error) => {\n        console.error('Fehler beim Senden der Anfrage:', error);\n      });\n  };\n\n  useEffect(() => {\n    // Initial die Bestellungen abrufen\n    fetchOrders();\n\n    // Intervall einrichten, um die Bestellungen regelmäßig abzurufen\n    const fetchOrdersInterval = setInterval(fetchOrders, 5000);\n\n    // Aufräumen, wenn die Komponente unmontiert wird\n    return () => clearInterval(fetchOrdersInterval);\n  }, []);\n\n  return (\n    <div>\n      <h1>Küche</h1>\n      <ul>\n      {orders.map((order) => (\n  <li key={order._id}>\n    {console.log('order:', order)} {/* Überprüfen Sie die Daten hier */}\n    {order.details.items && order.details.items.map((item, itemIndex) => (\n      <div key={itemIndex}>\n        {item.amount}x {item.name}\n      </div>\n    ))}\n    <button onClick={() => markOrderAsCompleted(order._id)}>Erledigt</button>\n  </li>\n))}\n\n      </ul>\n    </div>\n  );\n}\n\nexport default Kitchen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}