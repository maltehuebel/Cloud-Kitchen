{"ast":null,"code":"var _jsxFileName = \"/Users/maltehubel/Documents/Studium/HdM/Semester 1/Cloud Computing/Cloud Kitchen /neuer_versuch/kitchen_neu/src/components/K\\xFCche.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kitchen() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const fetchOrders = () => {\n    fetch('http://localhost:8080/orders').then(response => response.json()).then(data => {\n      console.log('Abruf der Bestellungen:', data); // Überprüfen Sie, ob Daten korrekt abgerufen werden\n      setOrders(data.reverse());\n    }).catch(error => {\n      console.error('Fehler beim Abrufen der Bestellungen:', error);\n    });\n  };\n  const markOrderAsCompleted = orderId => {\n    fetch(`http://localhost:8080/order/${orderId}/complete`, {\n      method: 'PATCH'\n    }).then(response => {\n      if (response.ok) {\n        // Aktualisieren Sie den State sofort, um die Bestellung zu entfernen\n        setOrders(prevOrders => prevOrders.filter(order => order._id !== orderId));\n      } else {\n        console.error('Fehler beim Markieren der Bestellung als erledigt');\n      }\n    }).catch(error => {\n      console.error('Fehler beim Senden der Anfrage:', error);\n    });\n  };\n  useEffect(() => {\n    // Initial die Bestellungen abrufen\n    fetchOrders();\n\n    // Intervall einrichten, um die Bestellungen regelmäßig abzurufen\n    const fetchOrdersInterval = setInterval(fetchOrders, 5000);\n\n    // Aufräumen, wenn die Komponente unmontiert wird\n    return () => clearInterval(fetchOrdersInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"K\\xFCche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [console.log('order:', order), \" \", order.details.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.anzahl, \"x \", item.title]\n        }, itemIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markOrderAsCompleted(order._id),\n          children: \"Erledigt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Kitchen, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = Kitchen;\nexport default Kitchen;\nvar _c;\n$RefreshReg$(_c, \"Kitchen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Kitchen","_s","orders","setOrders","fetchOrders","fetch","then","response","json","data","console","log","reverse","catch","error","markOrderAsCompleted","orderId","method","ok","prevOrders","filter","order","_id","fetchOrdersInterval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","details","items","item","itemIndex","anzahl","title","onClick","_c","$RefreshReg$"],"sources":["/Users/maltehubel/Documents/Studium/HdM/Semester 1/Cloud Computing/Cloud Kitchen /neuer_versuch/kitchen_neu/src/components/Küche.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Kitchen() {\n    const [orders, setOrders] = useState([]);\n\n    const fetchOrders = () => {\n        fetch('http://localhost:8080/orders')\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Abruf der Bestellungen:', data); // Überprüfen Sie, ob Daten korrekt abgerufen werden\n                setOrders(data.reverse());\n            })\n            .catch((error) => {\n                console.error('Fehler beim Abrufen der Bestellungen:', error);\n            });\n    };\n\n    const markOrderAsCompleted = (orderId) => {\n        fetch(`http://localhost:8080/order/${orderId}/complete`, { method: 'PATCH' })\n            .then((response) => {\n                if (response.ok) {\n                    // Aktualisieren Sie den State sofort, um die Bestellung zu entfernen\n                    setOrders((prevOrders) => prevOrders.filter((order) => order._id !== orderId));\n                } else {\n                    console.error('Fehler beim Markieren der Bestellung als erledigt');\n                }\n            })\n            .catch((error) => {\n                console.error('Fehler beim Senden der Anfrage:', error);\n            });\n    };\n\n    useEffect(() => {\n        // Initial die Bestellungen abrufen\n        fetchOrders();\n\n        // Intervall einrichten, um die Bestellungen regelmäßig abzurufen\n        const fetchOrdersInterval = setInterval(fetchOrders, 5000);\n\n        // Aufräumen, wenn die Komponente unmontiert wird\n        return () => clearInterval(fetchOrdersInterval);\n    }, []);\n\n    return (\n        <div>\n            <h1>Küche</h1>\n            <ul>\n                {orders.map((order) => (\n                    <li key={order._id}>\n                        {console.log('order:', order)} {/* Überprüfen Sie die Daten hier */}\n                        {order.details.items.map((item, itemIndex) => (\n                            <div key={itemIndex}>\n                                {item.anzahl}x {item.title}\n                            </div>\n                        ))}\n\n                        <button onClick={() => markOrderAsCompleted(order._id)}>Erledigt</button>\n                    </li>\n                ))}\n\n            </ul>\n        </div>\n    );\n}\n\nexport default Kitchen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}